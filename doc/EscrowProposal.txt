Proposal: Escrow service
Will Monroe

The implementation of an escrow service would depend on the type of economy being modeled in Meru.  There are a few different possible models of transaction for a virtual world, and all of them must realistically run side-by-side -- not just one would be enough for a fair and practical economy.

Two of them could be implemented with features currently in Sirikata:

I. Virtual money/third-party state tracking.
	
	A "bank" application keeps track of the amount of money each entity has, and acts as an intermediary in exchanges involving this money (or other types of state that the bank may track).

	Advantages: Familiar.  The money side of the escrow is as simple as can be: change the numbers, money is paid.

	Disadvantages: Complete central control.  This is necessary for money due to the ease with which an entity can change any numbers assigned to them locally.  Entire economy lost if escrow service crashes, quits, or is compromised.

	Implementaion: Data stored in script for each entity that communicates with escrow service.  At the minimum, this would include a number for the amount of money the entity owns.  A possible extension to this would be a whole system for keeping track of the state of entities as seen by other applications, with a system of permissions for viewing and changing states.

II. Contracts and local ownership

	Every entity runs code locally, never sending code across the space.  All
	goods are really services, the owner of code promising to run it in
	exchange for something else.

	Advantages: Distributed among participants for maximum stability, supports rapid growth of a free economy.  Arbitration rather than regulation.

	Disadvantages: Checking that a contract is fulfilled would probably require human intervention; an automated escrow service would be unfeasible (at least for the actual content of the contracts -- one could automate ensuring that both parties sign).

	Escrow implementation: Third party keeps track of contracts signed by entities, monitors complaints and reports them to human intermediaries.  A cryptographic signature system could be used to verify identities <Ewen>.

Another model would require an extra feature added to the Sirikata system, serialization code, which I believe is already in progress.

III. Presence copying
	
	Ownership is determined by whose entity a presence is running on.  Transfer of ownership takes place by serializing a presence with its associated scripts, creating a full copy on the other entity, and destroying the original.

	Advantages: Complete freedom for owner.  Supports collaboration in code and art.

	Disadvantages: One copy allows unlimited future copies, making any kind of business model difficult.  Requires serialization with closures to implement.

	Escrow implementation: Owner bundles up presence, associated scripts, sends as message to escrow service.  Escrow service waits for other party's contribution (any of I, II, III), shows the other party the owner's script in action (behind the escrow service's object host -- possibly in a sandbox for maximum security <Ewen>), and if both parties find the other's contribution acceptable, the escrow service takes the necessary action to trade the two contributions, including sending the code bundle to the other party.	
